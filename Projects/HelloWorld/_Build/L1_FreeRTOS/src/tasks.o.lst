   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tasks.c"
  15              		.text
  16              		.align	1
  17              		.thumb
  18              		.thumb_func
  20              	prvResetRunTimeStatsInList:
  21              		@ args = 0, pretend = 0, frame = 0
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 10B5     		push	{r4, lr}
  24 0002 4368     		ldr	r3, [r0, #4]
  25 0004 5A68     		ldr	r2, [r3, #4]
  26 0006 00F10803 		add	r3, r0, #8
  27 000a 4260     		str	r2, [r0, #4]
  28 000c 9A42     		cmp	r2, r3
  29 000e 04BF     		itt	eq
  30 0010 5A68     		ldreq	r2, [r3, #4]
  31 0012 4260     		streq	r2, [r0, #4]
  32 0014 4268     		ldr	r2, [r0, #4]
  33 0016 0021     		movs	r1, #0
  34 0018 D468     		ldr	r4, [r2, #12]
  35              	.L4:
  36 001a 4268     		ldr	r2, [r0, #4]
  37 001c 5268     		ldr	r2, [r2, #4]
  38 001e 4260     		str	r2, [r0, #4]
  39 0020 9A42     		cmp	r2, r3
  40 0022 04BF     		itt	eq
  41 0024 5A68     		ldreq	r2, [r3, #4]
  42 0026 4260     		streq	r2, [r0, #4]
  43 0028 4268     		ldr	r2, [r0, #4]
  44 002a D268     		ldr	r2, [r2, #12]
  45 002c A242     		cmp	r2, r4
  46 002e 9164     		str	r1, [r2, #72]
  47 0030 F3D1     		bne	.L4
  48 0032 10BD     		pop	{r4, pc}
  50              		.align	1
  51              		.thumb
  52              		.thumb_func
  54              	prvIdleTask:
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0034 10B5     		push	{r4, lr}
  58 0036 044C     		ldr	r4, .L9
  59              	.L8:
  60 0038 2368     		ldr	r3, [r4, #0]
  61 003a 012B     		cmp	r3, #1
  62 003c 01D9     		bls	.L7
  63 003e FFF7FEFF 		bl	vPortYield
  64              	.L7:
  65 0042 FFF7FEFF 		bl	vApplicationIdleHook
  66 0046 F7E7     		b	.L8
  67              	.L10:
  68              		.align	2
  69              	.L9:
  70 0048 00000000 		.word	.LANCHOR0
  72              		.align	1
  73              		.thumb
  74              		.thumb_func
  76              	prvListTaskWithinSingleList.part.0:
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 004c 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  80 0050 4B68     		ldr	r3, [r1, #4]
  81 0052 01F10805 		add	r5, r1, #8
  82 0056 5B68     		ldr	r3, [r3, #4]
  83 0058 4B60     		str	r3, [r1, #4]
  84 005a AB42     		cmp	r3, r5
  85 005c 04BF     		itt	eq
  86 005e 6B68     		ldreq	r3, [r5, #4]
  87 0060 4B60     		streq	r3, [r1, #4]
  88 0062 4B68     		ldr	r3, [r1, #4]
  89 0064 DF68     		ldr	r7, [r3, #12]
  90 0066 0346     		mov	r3, r0
  91 0068 0020     		movs	r0, #0
  92              	.L15:
  93 006a 4C68     		ldr	r4, [r1, #4]
  94 006c 6468     		ldr	r4, [r4, #4]
  95 006e 4C60     		str	r4, [r1, #4]
  96 0070 AC42     		cmp	r4, r5
  97 0072 04BF     		itt	eq
  98 0074 6C68     		ldreq	r4, [r5, #4]
  99 0076 4C60     		streq	r4, [r1, #4]
 100 0078 4C68     		ldr	r4, [r1, #4]
 101 007a E468     		ldr	r4, [r4, #12]
 102 007c 04F13406 		add	r6, r4, #52
 103 0080 1C60     		str	r4, [r3, #0]
 104 0082 5E60     		str	r6, [r3, #4]
 105 0084 E66B     		ldr	r6, [r4, #60]
 106 0086 1A73     		strb	r2, [r3, #12]
 107 0088 9E60     		str	r6, [r3, #8]
 108 008a E66A     		ldr	r6, [r4, #44]
 109 008c 1E61     		str	r6, [r3, #16]
 110 008e 666C     		ldr	r6, [r4, #68]
 111 0090 5E61     		str	r6, [r3, #20]
 112 0092 A66C     		ldr	r6, [r4, #72]
 113 0094 9E61     		str	r6, [r3, #24]
 114 0096 D4F83080 		ldr	r8, [r4, #48]
 115 009a 0026     		movs	r6, #0
 116              	.L14:
 117 009c 1FFA86FC 		uxth	ip, r6
 118 00a0 0136     		adds	r6, r6, #1
 119 00a2 08EB0609 		add	r9, r8, r6
 120 00a6 19F8019C 		ldrb	r9, [r9, #-1]	@ zero_extendqisi2
 121 00aa B9F1A50F 		cmp	r9, #165
 122 00ae F5D0     		beq	.L14
 123 00b0 A3F81CC0 		strh	ip, [r3, #28]	@ movhi
 124 00b4 0130     		adds	r0, r0, #1
 125 00b6 2033     		adds	r3, r3, #32
 126 00b8 BC42     		cmp	r4, r7
 127 00ba D6D1     		bne	.L15
 128 00bc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 130              		.align	1
 131              		.thumb
 132              		.thumb_func
 134              	prvAddCurrentTaskToDelayedList:
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 00c0 10B5     		push	{r4, lr}
 138 00c2 0C4B     		ldr	r3, .L21
 139 00c4 0446     		mov	r4, r0
 140 00c6 9A6A     		ldr	r2, [r3, #40]
 141 00c8 5060     		str	r0, [r2, #4]
 142 00ca DA6A     		ldr	r2, [r3, #44]
 143 00cc 9042     		cmp	r0, r2
 144 00ce 06D2     		bcs	.L19
 145 00d0 186B     		ldr	r0, [r3, #48]
 146 00d2 996A     		ldr	r1, [r3, #40]
 147 00d4 0431     		adds	r1, r1, #4
 148 00d6 BDE81040 		pop	{r4, lr}
 149 00da FFF7FEBF 		b	vListInsert
 150              	.L19:
 151 00de 586B     		ldr	r0, [r3, #52]
 152 00e0 996A     		ldr	r1, [r3, #40]
 153 00e2 0431     		adds	r1, r1, #4
 154 00e4 FFF7FEFF 		bl	vListInsert
 155 00e8 034B     		ldr	r3, .L21+4
 156 00ea 1A68     		ldr	r2, [r3, #0]
 157 00ec 9442     		cmp	r4, r2
 158 00ee 38BF     		it	cc
 159 00f0 1C60     		strcc	r4, [r3, #0]
 160 00f2 10BD     		pop	{r4, pc}
 161              	.L22:
 162              		.align	2
 163              	.L21:
 164 00f4 00000000 		.word	.LANCHOR0
 165 00f8 00000000 		.word	.LANCHOR1
 167              		.align	1
 168              		.global	xTaskGenericCreate
 169              		.thumb
 170              		.thumb_func
 172              	xTaskGenericCreate:
 173              		@ args = 16, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 00fc 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 176 0100 8246     		mov	sl, r0
 177 0102 0CAF     		add	r7, sp, #48
 178 0104 4C20     		movs	r0, #76
 179 0106 0D46     		mov	r5, r1
 180 0108 1446     		mov	r4, r2
 181 010a 9946     		mov	r9, r3
 182 010c 97E88009 		ldmia	r7, {r7, r8, fp}
 183 0110 FFF7FEFF 		bl	pvPortMalloc
 184 0114 0646     		mov	r6, r0
 185 0116 0028     		cmp	r0, #0
 186 0118 00F09F80 		beq	.L32
 187 011c BBF1000F 		cmp	fp, #0
 188 0120 03D1     		bne	.L25
 189 0122 A000     		lsls	r0, r4, #2
 190 0124 FFF7FEFF 		bl	pvPortMalloc
 191 0128 8346     		mov	fp, r0
 192              	.L25:
 193 012a C6F830B0 		str	fp, [r6, #48]
 194 012e BBF1000F 		cmp	fp, #0
 195 0132 03D1     		bne	.L26
 196 0134 3046     		mov	r0, r6
 197 0136 FFF7FEFF 		bl	vPortFree
 198 013a 8EE0     		b	.L32
 199              	.L26:
 200 013c A200     		lsls	r2, r4, #2
 201 013e 5846     		mov	r0, fp
 202 0140 A521     		movs	r1, #165
 203 0142 FFF7FEFF 		bl	memset
 204 0146 336B     		ldr	r3, [r6, #48]
 205 0148 013C     		subs	r4, r4, #1
 206 014a 03EB8403 		add	r3, r3, r4, lsl #2
 207 014e 23F00703 		bic	r3, r3, #7
 208 0152 0022     		movs	r2, #0
 209              	.L28:
 210 0154 A85C     		ldrb	r0, [r5, r2]	@ zero_extendqisi2
 211 0156 B118     		adds	r1, r6, r2
 212 0158 81F83400 		strb	r0, [r1, #52]
 213 015c A956     		ldrsb	r1, [r5, r2]
 214 015e 11B1     		cbz	r1, .L27
 215 0160 0132     		adds	r2, r2, #1
 216 0162 082A     		cmp	r2, #8
 217 0164 F6D1     		bne	.L28
 218              	.L27:
 219 0166 012F     		cmp	r7, #1
 220 0168 34BF     		ite	cc
 221 016a 3C46     		movcc	r4, r7
 222 016c 0124     		movcs	r4, #1
 223 016e 4FF0000B 		mov	fp, #0
 224 0172 351D     		adds	r5, r6, #4
 225 0174 F462     		str	r4, [r6, #44]
 226 0176 7464     		str	r4, [r6, #68]
 227 0178 86F83BB0 		strb	fp, [r6, #59]
 228 017c 2846     		mov	r0, r5
 229 017e 0193     		str	r3, [sp, #4]
 230 0180 C4F10204 		rsb	r4, r4, #2
 231 0184 FFF7FEFF 		bl	vListInitialiseItem
 232 0188 06F11800 		add	r0, r6, #24
 233 018c FFF7FEFF 		bl	vListInitialiseItem
 234 0190 3661     		str	r6, [r6, #16]
 235 0192 B461     		str	r4, [r6, #24]
 236 0194 7662     		str	r6, [r6, #36]
 237 0196 C6F848B0 		str	fp, [r6, #72]
 238 019a 019B     		ldr	r3, [sp, #4]
 239 019c 5146     		mov	r1, sl
 240 019e 1846     		mov	r0, r3
 241 01a0 4A46     		mov	r2, r9
 242 01a2 FFF7FEFF 		bl	pxPortInitialiseStack
 243 01a6 3060     		str	r0, [r6, #0]
 244 01a8 B8F1000F 		cmp	r8, #0
 245 01ac 01D0     		beq	.L29
 246 01ae C8F80060 		str	r6, [r8, #0]
 247              	.L29:
 248 01b2 2C4C     		ldr	r4, .L36
 249 01b4 FFF7FEFF 		bl	vPortEnterCritical
 250 01b8 A36B     		ldr	r3, [r4, #56]
 251 01ba 0133     		adds	r3, r3, #1
 252 01bc A363     		str	r3, [r4, #56]
 253 01be A36A     		ldr	r3, [r4, #40]
 254 01c0 0BBB     		cbnz	r3, .L30
 255 01c2 A662     		str	r6, [r4, #40]
 256 01c4 A36B     		ldr	r3, [r4, #56]
 257 01c6 012B     		cmp	r3, #1
 258 01c8 25D1     		bne	.L31
 259 01ca 2046     		mov	r0, r4
 260 01cc FFF7FEFF 		bl	vListInitialise
 261 01d0 04F13C09 		add	r9, r4, #60
 262 01d4 04F11400 		add	r0, r4, #20
 263 01d8 FFF7FEFF 		bl	vListInitialise
 264 01dc 04F15008 		add	r8, r4, #80
 265 01e0 4846     		mov	r0, r9
 266 01e2 FFF7FEFF 		bl	vListInitialise
 267 01e6 4046     		mov	r0, r8
 268 01e8 FFF7FEFF 		bl	vListInitialise
 269 01ec 04F16400 		add	r0, r4, #100
 270 01f0 FFF7FEFF 		bl	vListInitialise
 271 01f4 04F17800 		add	r0, r4, #120
 272 01f8 FFF7FEFF 		bl	vListInitialise
 273 01fc C4F83490 		str	r9, [r4, #52]
 274 0200 C4F83080 		str	r8, [r4, #48]
 275 0204 07E0     		b	.L31
 276              	.L30:
 277 0206 D4F88C30 		ldr	r3, [r4, #140]
 278 020a 23B9     		cbnz	r3, .L31
 279 020c A36A     		ldr	r3, [r4, #40]
 280 020e DB6A     		ldr	r3, [r3, #44]
 281 0210 BB42     		cmp	r3, r7
 282 0212 98BF     		it	ls
 283 0214 A662     		strls	r6, [r4, #40]
 284              	.L31:
 285 0216 134C     		ldr	r4, .L36
 286 0218 1420     		movs	r0, #20
 287 021a D4F89030 		ldr	r3, [r4, #144]
 288 021e D4F89420 		ldr	r2, [r4, #148]
 289 0222 0133     		adds	r3, r3, #1
 290 0224 F363     		str	r3, [r6, #60]
 291 0226 C4F89030 		str	r3, [r4, #144]
 292 022a F36A     		ldr	r3, [r6, #44]
 293 022c 0126     		movs	r6, #1
 294 022e 06FA03F1 		lsl	r1, r6, r3
 295 0232 0A43     		orrs	r2, r2, r1
 296 0234 00FB0340 		mla	r0, r0, r3, r4
 297 0238 C4F89420 		str	r2, [r4, #148]
 298 023c 2946     		mov	r1, r5
 299 023e FFF7FEFF 		bl	vListInsertEnd
 300 0242 FFF7FEFF 		bl	vPortExitCritical
 301 0246 D4F88C30 		ldr	r3, [r4, #140]
 302 024a 43B1     		cbz	r3, .L24
 303 024c A36A     		ldr	r3, [r4, #40]
 304 024e DB6A     		ldr	r3, [r3, #44]
 305 0250 BB42     		cmp	r3, r7
 306 0252 04D2     		bcs	.L24
 307 0254 FFF7FEFF 		bl	vPortYield
 308 0258 01E0     		b	.L24
 309              	.L32:
 310 025a 4FF0FF36 		mov	r6, #-1
 311              	.L24:
 312 025e 3046     		mov	r0, r6
 313 0260 BDE8FE8F 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 314              	.L37:
 315              		.align	2
 316              	.L36:
 317 0264 00000000 		.word	.LANCHOR0
 319              		.align	1
 320              		.global	xTaskIsTaskSuspended
 321              		.thumb
 322              		.thumb_func
 324              	xTaskIsTaskSuspended:
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0268 4269     		ldr	r2, [r0, #20]
 329 026a 084B     		ldr	r3, .L42
 330 026c 9A42     		cmp	r2, r3
 331 026e 08D1     		bne	.L40
 332 0270 806A     		ldr	r0, [r0, #40]
 333 0272 143B     		subs	r3, r3, #20
 334 0274 9842     		cmp	r0, r3
 335 0276 06D0     		beq	.L41
 336 0278 D0F10100 		rsbs	r0, r0, #1
 337 027c 38BF     		it	cc
 338 027e 0020     		movcc	r0, #0
 339 0280 7047     		bx	lr
 340              	.L40:
 341 0282 0020     		movs	r0, #0
 342 0284 7047     		bx	lr
 343              	.L41:
 344 0286 0020     		movs	r0, #0
 345 0288 7047     		bx	lr
 346              	.L43:
 347 028a 00BF     		.align	2
 348              	.L42:
 349 028c 78000000 		.word	.LANCHOR0+120
 351              		.align	1
 352              		.global	vTaskResume
 353              		.thumb
 354              		.thumb_func
 356              	vTaskResume:
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0290 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 360 0292 0446     		mov	r4, r0
 361 0294 0028     		cmp	r0, #0
 362 0296 28D0     		beq	.L44
 363 0298 144D     		ldr	r5, .L47
 364 029a AB6A     		ldr	r3, [r5, #40]
 365 029c 9842     		cmp	r0, r3
 366 029e 24D0     		beq	.L44
 367 02a0 FFF7FEFF 		bl	vPortEnterCritical
 368 02a4 2046     		mov	r0, r4
 369 02a6 FFF7FEFF 		bl	xTaskIsTaskSuspended
 370 02aa 0128     		cmp	r0, #1
 371 02ac 0746     		mov	r7, r0
 372 02ae 18D1     		bne	.L46
 373 02b0 261D     		adds	r6, r4, #4
 374 02b2 3046     		mov	r0, r6
 375 02b4 FFF7FEFF 		bl	uxListRemove
 376 02b8 E36A     		ldr	r3, [r4, #44]
 377 02ba D5F89420 		ldr	r2, [r5, #148]
 378 02be 07FA03F7 		lsl	r7, r7, r3
 379 02c2 1420     		movs	r0, #20
 380 02c4 1743     		orrs	r7, r7, r2
 381 02c6 00FB0350 		mla	r0, r0, r3, r5
 382 02ca 3146     		mov	r1, r6
 383 02cc C5F89470 		str	r7, [r5, #148]
 384 02d0 FFF7FEFF 		bl	vListInsertEnd
 385 02d4 AB6A     		ldr	r3, [r5, #40]
 386 02d6 E26A     		ldr	r2, [r4, #44]
 387 02d8 DB6A     		ldr	r3, [r3, #44]
 388 02da 9A42     		cmp	r2, r3
 389 02dc 01D3     		bcc	.L46
 390 02de FFF7FEFF 		bl	vPortYield
 391              	.L46:
 392 02e2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 393 02e6 FFF7FEBF 		b	vPortExitCritical
 394              	.L44:
 395 02ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 396              	.L48:
 397              		.align	2
 398              	.L47:
 399 02ec 00000000 		.word	.LANCHOR0
 401              		.align	1
 402              		.global	xTaskResumeFromISR
 403              		.thumb
 404              		.thumb_func
 406              	xTaskResumeFromISR:
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 02f0 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 410 02f4 0746     		mov	r7, r0
 411 02f6 FFF7FEFF 		bl	ulPortSetInterruptMask
 412 02fa 0546     		mov	r5, r0
 413 02fc 3846     		mov	r0, r7
 414 02fe FFF7FEFF 		bl	xTaskIsTaskSuspended
 415 0302 0128     		cmp	r0, #1
 416 0304 8146     		mov	r9, r0
 417 0306 25D1     		bne	.L52
 418 0308 164E     		ldr	r6, .L53
 419 030a D6F89830 		ldr	r3, [r6, #152]
 420 030e DBB9     		cbnz	r3, .L51
 421 0310 B36A     		ldr	r3, [r6, #40]
 422 0312 FC6A     		ldr	r4, [r7, #44]
 423 0314 DB6A     		ldr	r3, [r3, #44]
 424 0316 07F10408 		add	r8, r7, #4
 425 031a 9C42     		cmp	r4, r3
 426 031c 4046     		mov	r0, r8
 427 031e 34BF     		ite	cc
 428 0320 0024     		movcc	r4, #0
 429 0322 0124     		movcs	r4, #1
 430 0324 FFF7FEFF 		bl	uxListRemove
 431 0328 FB6A     		ldr	r3, [r7, #44]
 432 032a D6F89420 		ldr	r2, [r6, #148]
 433 032e 09FA03F9 		lsl	r9, r9, r3
 434 0332 1420     		movs	r0, #20
 435 0334 49EA0202 		orr	r2, r9, r2
 436 0338 00FB0360 		mla	r0, r0, r3, r6
 437 033c 4146     		mov	r1, r8
 438 033e C6F89420 		str	r2, [r6, #148]
 439 0342 FFF7FEFF 		bl	vListInsertEnd
 440 0346 06E0     		b	.L50
 441              	.L51:
 442 0348 07F11801 		add	r1, r7, #24
 443 034c 06F16400 		add	r0, r6, #100
 444 0350 FFF7FEFF 		bl	vListInsertEnd
 445              	.L52:
 446 0354 0024     		movs	r4, #0
 447              	.L50:
 448 0356 2846     		mov	r0, r5
 449 0358 FFF7FEFF 		bl	vPortClearInterruptMask
 450 035c 2046     		mov	r0, r4
 451 035e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 452              	.L54:
 453 0362 00BF     		.align	2
 454              	.L53:
 455 0364 00000000 		.word	.LANCHOR0
 457              		.align	1
 458              		.global	vTaskStartScheduler
 459              		.thumb
 460              		.thumb_func
 462              	vTaskStartScheduler:
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0368 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 466 036a 0F4D     		ldr	r5, .L57
 467 036c 0024     		movs	r4, #0
 468 036e 05F19C03 		add	r3, r5, #156
 469 0372 0193     		str	r3, [sp, #4]
 470 0374 8022     		movs	r2, #128
 471 0376 0D48     		ldr	r0, .L57+4
 472 0378 0D49     		ldr	r1, .L57+8
 473 037a 2346     		mov	r3, r4
 474 037c 0094     		str	r4, [sp, #0]
 475 037e 0294     		str	r4, [sp, #8]
 476 0380 0394     		str	r4, [sp, #12]
 477 0382 FFF7FEFF 		bl	xTaskGenericCreate
 478 0386 0128     		cmp	r0, #1
 479 0388 0646     		mov	r6, r0
 480 038a 0BD1     		bne	.L55
 481 038c FFF7FEFF 		bl	ulPortSetInterruptMask
 482 0390 C5F88C60 		str	r6, [r5, #140]
 483 0394 EC62     		str	r4, [r5, #44]
 484 0396 FFF7FEFF 		bl	vConfigureTimerForRunTimeStats
 485 039a 04B0     		add	sp, sp, #16
 486 039c BDE87040 		pop	{r4, r5, r6, lr}
 487 03a0 FFF7FEBF 		b	xPortStartScheduler
 488              	.L55:
 489 03a4 04B0     		add	sp, sp, #16
 490 03a6 70BD     		pop	{r4, r5, r6, pc}
 491              	.L58:
 492              		.align	2
 493              	.L57:
 494 03a8 00000000 		.word	.LANCHOR0
 495 03ac 00000000 		.word	prvIdleTask
 496 03b0 00000000 		.word	.LC0
 498              		.align	1
 499              		.global	vTaskEndScheduler
 500              		.thumb
 501              		.thumb_func
 503              	vTaskEndScheduler:
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 03b4 08B5     		push	{r3, lr}
 507 03b6 FFF7FEFF 		bl	ulPortSetInterruptMask
 508 03ba 044B     		ldr	r3, .L60
 509 03bc 0022     		movs	r2, #0
 510 03be C3F88C20 		str	r2, [r3, #140]
 511 03c2 BDE80840 		pop	{r3, lr}
 512 03c6 FFF7FEBF 		b	vPortEndScheduler
 513              	.L61:
 514 03ca 00BF     		.align	2
 515              	.L60:
 516 03cc 00000000 		.word	.LANCHOR0
 518              		.align	1
 519              		.global	vTaskSuspendAll
 520              		.thumb
 521              		.thumb_func
 523              	vTaskSuspendAll:
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527 03d0 034B     		ldr	r3, .L63
 528 03d2 D3F89820 		ldr	r2, [r3, #152]
 529 03d6 0132     		adds	r2, r2, #1
 530 03d8 C3F89820 		str	r2, [r3, #152]
 531 03dc 7047     		bx	lr
 532              	.L64:
 533 03de 00BF     		.align	2
 534              	.L63:
 535 03e0 00000000 		.word	.LANCHOR0
 537              		.align	1
 538              		.global	xTaskGetTickCount
 539              		.thumb
 540              		.thumb_func
 542              	xTaskGetTickCount:
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545 03e4 10B5     		push	{r4, lr}
 546 03e6 FFF7FEFF 		bl	vPortEnterCritical
 547 03ea 034B     		ldr	r3, .L66
 548 03ec DC6A     		ldr	r4, [r3, #44]
 549 03ee FFF7FEFF 		bl	vPortExitCritical
 550 03f2 2046     		mov	r0, r4
 551 03f4 10BD     		pop	{r4, pc}
 552              	.L67:
 553 03f6 00BF     		.align	2
 554              	.L66:
 555 03f8 00000000 		.word	.LANCHOR0
 557              		.align	1
 558              		.global	xTaskGetTickCountFromISR
 559              		.thumb
 560              		.thumb_func
 562              	xTaskGetTickCountFromISR:
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565 03fc 10B5     		push	{r4, lr}
 566 03fe FFF7FEFF 		bl	ulPortSetInterruptMask
 567 0402 034B     		ldr	r3, .L69
 568 0404 DC6A     		ldr	r4, [r3, #44]
 569 0406 FFF7FEFF 		bl	vPortClearInterruptMask
 570 040a 2046     		mov	r0, r4
 571 040c 10BD     		pop	{r4, pc}
 572              	.L70:
 573 040e 00BF     		.align	2
 574              	.L69:
 575 0410 00000000 		.word	.LANCHOR0
 577              		.align	1
 578              		.global	uxTaskGetNumberOfTasks
 579              		.thumb
 580              		.thumb_func
 582              	uxTaskGetNumberOfTasks:
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0414 014B     		ldr	r3, .L72
 587 0416 986B     		ldr	r0, [r3, #56]
 588 0418 7047     		bx	lr
 589              	.L73:
 590 041a 00BF     		.align	2
 591              	.L72:
 592 041c 00000000 		.word	.LANCHOR0
 594              		.align	1
 595              		.global	xTaskGetIdleTaskHandle
 596              		.thumb
 597              		.thumb_func
 599              	xTaskGetIdleTaskHandle:
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603 0420 014B     		ldr	r3, .L75
 604 0422 D3F89C00 		ldr	r0, [r3, #156]
 605 0426 7047     		bx	lr
 606              	.L76:
 607              		.align	2
 608              	.L75:
 609 0428 00000000 		.word	.LANCHOR0
 611              		.align	1
 612              		.global	xTaskIncrementTick
 613              		.thumb
 614              		.thumb_func
 616              	xTaskIncrementTick:
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 042c 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 620 0430 3B4B     		ldr	r3, .L98
 621 0432 D3F89820 		ldr	r2, [r3, #152]
 622 0436 002A     		cmp	r2, #0
 623 0438 54D1     		bne	.L78
 624 043a DA6A     		ldr	r2, [r3, #44]
 625 043c 0132     		adds	r2, r2, #1
 626 043e DA62     		str	r2, [r3, #44]
 627 0440 DF6A     		ldr	r7, [r3, #44]
 628 0442 87B9     		cbnz	r7, .L79
 629 0444 5A6B     		ldr	r2, [r3, #52]
 630 0446 196B     		ldr	r1, [r3, #48]
 631 0448 5963     		str	r1, [r3, #52]
 632 044a 1A63     		str	r2, [r3, #48]
 633 044c D3F8A020 		ldr	r2, [r3, #160]
 634 0450 0132     		adds	r2, r2, #1
 635 0452 C3F8A020 		str	r2, [r3, #160]
 636 0456 5A6B     		ldr	r2, [r3, #52]
 637 0458 1168     		ldr	r1, [r2, #0]
 638 045a 324A     		ldr	r2, .L98+4
 639 045c 0029     		cmp	r1, #0
 640 045e 52D1     		bne	.L80
 641 0460 4FF0FF33 		mov	r3, #-1
 642              	.L96:
 643 0464 1360     		str	r3, [r2, #0]
 644              	.L79:
 645 0466 2F4B     		ldr	r3, .L98+4
 646 0468 0024     		movs	r4, #0
 647 046a 1B68     		ldr	r3, [r3, #0]
 648 046c 9F42     		cmp	r7, r3
 649 046e 2FD3     		bcc	.L82
 650              	.L91:
 651 0470 2B4D     		ldr	r5, .L98
 652 0472 4FF00109 		mov	r9, #1
 653 0476 4FF01408 		mov	r8, #20
 654              	.L94:
 655 047a 6B6B     		ldr	r3, [r5, #52]
 656 047c 1B68     		ldr	r3, [r3, #0]
 657 047e 002B     		cmp	r3, #0
 658 0480 46D1     		bne	.L83
 659 0482 284B     		ldr	r3, .L98+4
 660 0484 4FF0FF32 		mov	r2, #-1
 661 0488 1A60     		str	r2, [r3, #0]
 662 048a 21E0     		b	.L82
 663              	.L97:
 664 048c 254A     		ldr	r2, .L98+4
 665 048e 1360     		str	r3, [r2, #0]
 666 0490 1EE0     		b	.L82
 667              	.L95:
 668 0492 06F1040A 		add	sl, r6, #4
 669 0496 5046     		mov	r0, sl
 670 0498 FFF7FEFF 		bl	uxListRemove
 671 049c B36A     		ldr	r3, [r6, #40]
 672 049e 1BB1     		cbz	r3, .L84
 673 04a0 06F11800 		add	r0, r6, #24
 674 04a4 FFF7FEFF 		bl	uxListRemove
 675              	.L84:
 676 04a8 F06A     		ldr	r0, [r6, #44]
 677 04aa D5F89430 		ldr	r3, [r5, #148]
 678 04ae 09FA00F2 		lsl	r2, r9, r0
 679 04b2 5146     		mov	r1, sl
 680 04b4 1343     		orrs	r3, r3, r2
 681 04b6 08FB0050 		mla	r0, r8, r0, r5
 682 04ba C5F89430 		str	r3, [r5, #148]
 683 04be FFF7FEFF 		bl	vListInsertEnd
 684 04c2 AB6A     		ldr	r3, [r5, #40]
 685 04c4 F26A     		ldr	r2, [r6, #44]
 686 04c6 DB6A     		ldr	r3, [r3, #44]
 687 04c8 9A42     		cmp	r2, r3
 688 04ca 28BF     		it	cs
 689 04cc 0124     		movcs	r4, #1
 690 04ce D4E7     		b	.L94
 691              	.L82:
 692 04d0 134B     		ldr	r3, .L98
 693 04d2 1421     		movs	r1, #20
 694 04d4 9A6A     		ldr	r2, [r3, #40]
 695 04d6 D26A     		ldr	r2, [r2, #44]
 696 04d8 4A43     		muls	r2, r1, r2
 697 04da 9B58     		ldr	r3, [r3, r2]
 698 04dc 012B     		cmp	r3, #1
 699 04de 88BF     		it	hi
 700 04e0 0124     		movhi	r4, #1
 701 04e2 07E0     		b	.L87
 702              	.L78:
 703 04e4 D3F8A420 		ldr	r2, [r3, #164]
 704 04e8 0024     		movs	r4, #0
 705 04ea 0132     		adds	r2, r2, #1
 706 04ec C3F8A420 		str	r2, [r3, #164]
 707 04f0 FFF7FEFF 		bl	vApplicationTickHook
 708              	.L87:
 709 04f4 0A4B     		ldr	r3, .L98
 710 04f6 D3F8A430 		ldr	r3, [r3, #164]
 711 04fa 0BB9     		cbnz	r3, .L88
 712 04fc FFF7FEFF 		bl	vApplicationTickHook
 713              	.L88:
 714 0500 2046     		mov	r0, r4
 715 0502 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 716              	.L80:
 717 0506 5B6B     		ldr	r3, [r3, #52]
 718 0508 DB68     		ldr	r3, [r3, #12]
 719 050a DB68     		ldr	r3, [r3, #12]
 720 050c 5B68     		ldr	r3, [r3, #4]
 721 050e A9E7     		b	.L96
 722              	.L83:
 723 0510 6B6B     		ldr	r3, [r5, #52]
 724 0512 DB68     		ldr	r3, [r3, #12]
 725 0514 DE68     		ldr	r6, [r3, #12]
 726 0516 7368     		ldr	r3, [r6, #4]
 727 0518 9F42     		cmp	r7, r3
 728 051a BAD2     		bcs	.L95
 729 051c B6E7     		b	.L97
 730              	.L99:
 731 051e 00BF     		.align	2
 732              	.L98:
 733 0520 00000000 		.word	.LANCHOR0
 734 0524 00000000 		.word	.LANCHOR1
 736              		.align	1
 737              		.global	xTaskResumeAll
 738              		.thumb
 739              		.thumb_func
 741              	xTaskResumeAll:
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744 0528 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 745 052c FFF7FEFF 		bl	vPortEnterCritical
 746 0530 2D4B     		ldr	r3, .L119
 747 0532 D3F89820 		ldr	r2, [r3, #152]
 748 0536 013A     		subs	r2, r2, #1
 749 0538 C3F89820 		str	r2, [r3, #152]
 750 053c D3F89850 		ldr	r5, [r3, #152]
 751 0540 002D     		cmp	r5, #0
 752 0542 4BD1     		bne	.L114
 753 0544 9C6B     		ldr	r4, [r3, #56]
 754 0546 FCB9     		cbnz	r4, .L111
 755 0548 49E0     		b	.L101
 756              	.L104:
 757 054a 236F     		ldr	r3, [r4, #112]
 758 054c DE68     		ldr	r6, [r3, #12]
 759 054e 06F10409 		add	r9, r6, #4
 760 0552 06F11800 		add	r0, r6, #24
 761 0556 FFF7FEFF 		bl	uxListRemove
 762 055a 4846     		mov	r0, r9
 763 055c FFF7FEFF 		bl	uxListRemove
 764 0560 F06A     		ldr	r0, [r6, #44]
 765 0562 D4F89430 		ldr	r3, [r4, #148]
 766 0566 08FA00F2 		lsl	r2, r8, r0
 767 056a 1343     		orrs	r3, r3, r2
 768 056c C4F89430 		str	r3, [r4, #148]
 769 0570 07FB0040 		mla	r0, r7, r0, r4
 770 0574 4946     		mov	r1, r9
 771 0576 FFF7FEFF 		bl	vListInsertEnd
 772 057a A36A     		ldr	r3, [r4, #40]
 773 057c F26A     		ldr	r2, [r6, #44]
 774 057e DB6A     		ldr	r3, [r3, #44]
 775 0580 9A42     		cmp	r2, r3
 776 0582 28BF     		it	cs
 777 0584 0125     		movcs	r5, #1
 778 0586 03E0     		b	.L115
 779              	.L111:
 780 0588 1C46     		mov	r4, r3
 781 058a 4FF00108 		mov	r8, #1
 782 058e 1427     		movs	r7, #20
 783              	.L115:
 784 0590 636E     		ldr	r3, [r4, #100]
 785 0592 154E     		ldr	r6, .L119
 786 0594 002B     		cmp	r3, #0
 787 0596 D8D1     		bne	.L104
 788 0598 D6F8A430 		ldr	r3, [r6, #164]
 789 059c 83B1     		cbz	r3, .L105
 790 059e 0AE0     		b	.L118
 791              	.L108:
 792 05a0 FFF7FEFF 		bl	xTaskIncrementTick
 793 05a4 D4F8A430 		ldr	r3, [r4, #164]
 794 05a8 0028     		cmp	r0, #0
 795 05aa 18BF     		it	ne
 796 05ac 0125     		movne	r5, #1
 797 05ae 013B     		subs	r3, r3, #1
 798 05b0 C4F8A430 		str	r3, [r4, #164]
 799 05b4 00E0     		b	.L117
 800              	.L118:
 801 05b6 3446     		mov	r4, r6
 802              	.L117:
 803 05b8 D6F8A430 		ldr	r3, [r6, #164]
 804 05bc 002B     		cmp	r3, #0
 805 05be EFD1     		bne	.L108
 806              	.L105:
 807 05c0 012D     		cmp	r5, #1
 808 05c2 094B     		ldr	r3, .L119
 809 05c4 03D0     		beq	.L109
 810 05c6 D3F8A820 		ldr	r2, [r3, #168]
 811 05ca 012A     		cmp	r2, #1
 812 05cc 06D1     		bne	.L114
 813              	.L109:
 814 05ce 0022     		movs	r2, #0
 815 05d0 C3F8A820 		str	r2, [r3, #168]
 816 05d4 FFF7FEFF 		bl	vPortYield
 817 05d8 0124     		movs	r4, #1
 818 05da 00E0     		b	.L101
 819              	.L114:
 820 05dc 0024     		movs	r4, #0
 821              	.L101:
 822 05de FFF7FEFF 		bl	vPortExitCritical
 823 05e2 2046     		mov	r0, r4
 824 05e4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 825              	.L120:
 826              		.align	2
 827              	.L119:
 828 05e8 00000000 		.word	.LANCHOR0
 830              		.align	1
 831              		.global	uxTaskGetSystemState
 832              		.thumb
 833              		.thumb_func
 835              	uxTaskGetSystemState:
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838 05ec F8B5     		push	{r3, r4, r5, r6, r7, lr}
 839 05ee 214E     		ldr	r6, .L134
 840 05f0 0D46     		mov	r5, r1
 841 05f2 0446     		mov	r4, r0
 842 05f4 1746     		mov	r7, r2
 843 05f6 FFF7FEFF 		bl	vTaskSuspendAll
 844 05fa B36B     		ldr	r3, [r6, #56]
 845 05fc 9D42     		cmp	r5, r3
 846 05fe 34D3     		bcc	.L128
 847 0600 7569     		ldr	r5, [r6, #20]
 848 0602 35B1     		cbz	r5, .L123
 849 0604 2046     		mov	r0, r4
 850 0606 06F11401 		add	r1, r6, #20
 851 060a 0122     		movs	r2, #1
 852 060c FFF71EFD 		bl	prvListTaskWithinSingleList.part.0
 853 0610 0546     		mov	r5, r0
 854              	.L123:
 855 0612 3068     		ldr	r0, [r6, #0]
 856 0614 28B1     		cbz	r0, .L124
 857 0616 04EB4510 		add	r0, r4, r5, lsl #5
 858 061a 1649     		ldr	r1, .L134
 859 061c 0122     		movs	r2, #1
 860 061e FFF715FD 		bl	prvListTaskWithinSingleList.part.0
 861              	.L124:
 862 0622 144B     		ldr	r3, .L134
 863 0624 4519     		adds	r5, r0, r5
 864 0626 596B     		ldr	r1, [r3, #52]
 865 0628 0868     		ldr	r0, [r1, #0]
 866 062a 20B1     		cbz	r0, .L125
 867 062c 04EB4510 		add	r0, r4, r5, lsl #5
 868 0630 0222     		movs	r2, #2
 869 0632 FFF70BFD 		bl	prvListTaskWithinSingleList.part.0
 870              	.L125:
 871 0636 0F4B     		ldr	r3, .L134
 872 0638 4619     		adds	r6, r0, r5
 873 063a 196B     		ldr	r1, [r3, #48]
 874 063c 0868     		ldr	r0, [r1, #0]
 875 063e 20B1     		cbz	r0, .L126
 876 0640 04EB4610 		add	r0, r4, r6, lsl #5
 877 0644 0222     		movs	r2, #2
 878 0646 FFF701FD 		bl	prvListTaskWithinSingleList.part.0
 879              	.L126:
 880 064a 0A49     		ldr	r1, .L134
 881 064c 8519     		adds	r5, r0, r6
 882 064e 886F     		ldr	r0, [r1, #120]
 883 0650 28B1     		cbz	r0, .L127
 884 0652 04EB4510 		add	r0, r4, r5, lsl #5
 885 0656 7831     		adds	r1, r1, #120
 886 0658 0322     		movs	r2, #3
 887 065a FFF7F7FC 		bl	prvListTaskWithinSingleList.part.0
 888              	.L127:
 889 065e 4519     		adds	r5, r0, r5
 890 0660 27B1     		cbz	r7, .L122
 891 0662 FFF7FEFF 		bl	uxGetTimerForRunTimeStats
 892 0666 3860     		str	r0, [r7, #0]
 893 0668 00E0     		b	.L122
 894              	.L128:
 895 066a 0025     		movs	r5, #0
 896              	.L122:
 897 066c FFF7FEFF 		bl	xTaskResumeAll
 898 0670 2846     		mov	r0, r5
 899 0672 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 900              	.L135:
 901              		.align	2
 902              	.L134:
 903 0674 00000000 		.word	.LANCHOR0
 905              		.align	1
 906              		.global	vTaskDelay
 907              		.thumb
 908              		.thumb_func
 910              	vTaskDelay:
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913 0678 38B5     		push	{r3, r4, r5, lr}
 914 067a 0546     		mov	r5, r0
 915 067c D0B1     		cbz	r0, .L137
 916 067e 104C     		ldr	r4, .L140
 917 0680 FFF7FEFF 		bl	vTaskSuspendAll
 918 0684 E36A     		ldr	r3, [r4, #44]
 919 0686 A06A     		ldr	r0, [r4, #40]
 920 0688 ED18     		adds	r5, r5, r3
 921 068a 0430     		adds	r0, r0, #4
 922 068c FFF7FEFF 		bl	uxListRemove
 923 0690 50B9     		cbnz	r0, .L138
 924 0692 D4F89420 		ldr	r2, [r4, #148]
 925 0696 A36A     		ldr	r3, [r4, #40]
 926 0698 0121     		movs	r1, #1
 927 069a DB6A     		ldr	r3, [r3, #44]
 928 069c 01FA03F3 		lsl	r3, r1, r3
 929 06a0 22EA0303 		bic	r3, r2, r3
 930 06a4 C4F89430 		str	r3, [r4, #148]
 931              	.L138:
 932 06a8 2846     		mov	r0, r5
 933 06aa FFF709FD 		bl	prvAddCurrentTaskToDelayedList
 934 06ae FFF7FEFF 		bl	xTaskResumeAll
 935 06b2 18B9     		cbnz	r0, .L136
 936              	.L137:
 937 06b4 BDE83840 		pop	{r3, r4, r5, lr}
 938 06b8 FFF7FEBF 		b	vPortYield
 939              	.L136:
 940 06bc 38BD     		pop	{r3, r4, r5, pc}
 941              	.L141:
 942 06be 00BF     		.align	2
 943              	.L140:
 944 06c0 00000000 		.word	.LANCHOR0
 946              		.align	1
 947              		.global	vTaskDelayUntil
 948              		.thumb
 949              		.thumb_func
 951              	vTaskDelayUntil:
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954 06c4 38B5     		push	{r3, r4, r5, lr}
 955 06c6 0C46     		mov	r4, r1
 956 06c8 0546     		mov	r5, r0
 957 06ca FFF7FEFF 		bl	vTaskSuspendAll
 958 06ce 1849     		ldr	r1, .L151
 959 06d0 2A68     		ldr	r2, [r5, #0]
 960 06d2 CB6A     		ldr	r3, [r1, #44]
 961 06d4 A418     		adds	r4, r4, r2
 962 06d6 9342     		cmp	r3, r2
 963 06d8 02D2     		bcs	.L143
 964 06da 9442     		cmp	r4, r2
 965 06dc 07D2     		bcs	.L148
 966 06de 01E0     		b	.L150
 967              	.L143:
 968 06e0 9442     		cmp	r4, r2
 969 06e2 06D3     		bcc	.L149
 970              	.L150:
 971 06e4 9C42     		cmp	r4, r3
 972 06e6 94BF     		ite	ls
 973 06e8 0023     		movls	r3, #0
 974 06ea 0123     		movhi	r3, #1
 975 06ec 02E0     		b	.L144
 976              	.L148:
 977 06ee 0023     		movs	r3, #0
 978 06f0 00E0     		b	.L144
 979              	.L149:
 980 06f2 0123     		movs	r3, #1
 981              	.L144:
 982 06f4 2C60     		str	r4, [r5, #0]
 983 06f6 9BB1     		cbz	r3, .L145
 984 06f8 886A     		ldr	r0, [r1, #40]
 985 06fa 0D4D     		ldr	r5, .L151
 986 06fc 0430     		adds	r0, r0, #4
 987 06fe FFF7FEFF 		bl	uxListRemove
 988 0702 50B9     		cbnz	r0, .L146
 989 0704 D5F89420 		ldr	r2, [r5, #148]
 990 0708 AB6A     		ldr	r3, [r5, #40]
 991 070a 0121     		movs	r1, #1
 992 070c DB6A     		ldr	r3, [r3, #44]
 993 070e 01FA03F3 		lsl	r3, r1, r3
 994 0712 22EA0303 		bic	r3, r2, r3
 995 0716 C5F89430 		str	r3, [r5, #148]
 996              	.L146:
 997 071a 2046     		mov	r0, r4
 998 071c FFF7D0FC 		bl	prvAddCurrentTaskToDelayedList
 999              	.L145:
 1000 0720 FFF7FEFF 		bl	xTaskResumeAll
 1001 0724 18B9     		cbnz	r0, .L142
 1002 0726 BDE83840 		pop	{r3, r4, r5, lr}
 1003 072a FFF7FEBF 		b	vPortYield
 1004              	.L142:
 1005 072e 38BD     		pop	{r3, r4, r5, pc}
 1006              	.L152:
 1007              		.align	2
 1008              	.L151:
 1009 0730 00000000 		.word	.LANCHOR0
 1011              		.align	1
 1012              		.global	vTaskSwitchContext
 1013              		.thumb
 1014              		.thumb_func
 1016              	vTaskSwitchContext:
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019 0734 10B5     		push	{r4, lr}
 1020 0736 244B     		ldr	r3, .L160
 1021 0738 D3F89820 		ldr	r2, [r3, #152]
 1022 073c 1C46     		mov	r4, r3
 1023 073e 1AB1     		cbz	r2, .L154
 1024 0740 0122     		movs	r2, #1
 1025 0742 C3F8A820 		str	r2, [r3, #168]
 1026 0746 10BD     		pop	{r4, pc}
 1027              	.L154:
 1028 0748 FFF7FEFF 		bl	uxGetTimerForRunTimeStats
 1029 074c D4F8B020 		ldr	r2, [r4, #176]
 1030 0750 C4F8AC00 		str	r0, [r4, #172]
 1031 0754 9042     		cmp	r0, r2
 1032 0756 04D9     		bls	.L156
 1033 0758 A36A     		ldr	r3, [r4, #40]
 1034 075a 996C     		ldr	r1, [r3, #72]
 1035 075c 8A1A     		subs	r2, r1, r2
 1036 075e 1218     		adds	r2, r2, r0
 1037 0760 9A64     		str	r2, [r3, #72]
 1038              	.L156:
 1039 0762 A16A     		ldr	r1, [r4, #40]
 1040 0764 A26A     		ldr	r2, [r4, #40]
 1041 0766 0968     		ldr	r1, [r1, #0]
 1042 0768 126B     		ldr	r2, [r2, #48]
 1043 076a 174B     		ldr	r3, .L160
 1044 076c 9142     		cmp	r1, r2
 1045 076e C4F8B000 		str	r0, [r4, #176]
 1046 0772 04D8     		bhi	.L157
 1047 0774 986A     		ldr	r0, [r3, #40]
 1048 0776 996A     		ldr	r1, [r3, #40]
 1049 0778 3431     		adds	r1, r1, #52
 1050 077a FFF7FEFF 		bl	vApplicationStackOverflowHook
 1051              	.L157:
 1052 077e 124C     		ldr	r4, .L160
 1053 0780 1249     		ldr	r1, .L160+4
 1054 0782 A36A     		ldr	r3, [r4, #40]
 1055 0784 1422     		movs	r2, #20
 1056 0786 186B     		ldr	r0, [r3, #48]
 1057 0788 FFF7FEFF 		bl	memcmp
 1058 078c 20B1     		cbz	r0, .L158
 1059 078e A06A     		ldr	r0, [r4, #40]
 1060 0790 A16A     		ldr	r1, [r4, #40]
 1061 0792 3431     		adds	r1, r1, #52
 1062 0794 FFF7FEFF 		bl	vApplicationStackOverflowHook
 1063              	.L158:
 1064 0798 D4F89430 		ldr	r3, [r4, #148]
 1065              	@ 152 "../L1_FreeRTOS/portable/portmacro.h" 1
 1066 079c B3FA83F3 		clz r3, r3
 1067              	@ 0 "" 2
 1068              		.thumb
 1069 07a0 DBB2     		uxtb	r3, r3
 1070 07a2 1422     		movs	r2, #20
 1071 07a4 C3F11F03 		rsb	r3, r3, #31
 1072 07a8 02FB0344 		mla	r4, r2, r3, r4
 1073 07ac 6368     		ldr	r3, [r4, #4]
 1074 07ae 04F10802 		add	r2, r4, #8
 1075 07b2 5B68     		ldr	r3, [r3, #4]
 1076 07b4 6360     		str	r3, [r4, #4]
 1077 07b6 9342     		cmp	r3, r2
 1078 07b8 04BF     		itt	eq
 1079 07ba 5B68     		ldreq	r3, [r3, #4]
 1080 07bc 6360     		streq	r3, [r4, #4]
 1081 07be 6368     		ldr	r3, [r4, #4]
 1082 07c0 DA68     		ldr	r2, [r3, #12]
 1083 07c2 014B     		ldr	r3, .L160
 1084 07c4 9A62     		str	r2, [r3, #40]
 1085 07c6 10BD     		pop	{r4, pc}
 1086              	.L161:
 1087              		.align	2
 1088              	.L160:
 1089 07c8 00000000 		.word	.LANCHOR0
 1090 07cc 00000000 		.word	.LANCHOR2
 1092              		.align	1
 1093              		.global	vTaskSuspend
 1094              		.thumb
 1095              		.thumb_func
 1097              	vTaskSuspend:
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100 07d0 70B5     		push	{r4, r5, r6, lr}
 1101 07d2 0546     		mov	r5, r0
 1102 07d4 FFF7FEFF 		bl	vPortEnterCritical
 1103 07d8 0DB9     		cbnz	r5, .L163
 1104 07da 1C4B     		ldr	r3, .L170
 1105 07dc 9D6A     		ldr	r5, [r3, #40]
 1106              	.L163:
 1107 07de 2E1D     		adds	r6, r5, #4
 1108 07e0 3046     		mov	r0, r6
 1109 07e2 FFF7FEFF 		bl	uxListRemove
 1110 07e6 70B9     		cbnz	r0, .L164
 1111 07e8 EA6A     		ldr	r2, [r5, #44]
 1112 07ea 1421     		movs	r1, #20
 1113 07ec 5143     		muls	r1, r2, r1
 1114 07ee 174B     		ldr	r3, .L170
 1115 07f0 5958     		ldr	r1, [r3, r1]
 1116 07f2 41B9     		cbnz	r1, .L164
 1117 07f4 0120     		movs	r0, #1
 1118 07f6 00FA02F2 		lsl	r2, r0, r2
 1119 07fa D3F89410 		ldr	r1, [r3, #148]
 1120 07fe 21EA0202 		bic	r2, r1, r2
 1121 0802 C3F89420 		str	r2, [r3, #148]
 1122              	.L164:
 1123 0806 AB6A     		ldr	r3, [r5, #40]
 1124 0808 1BB1     		cbz	r3, .L165
 1125 080a 05F11800 		add	r0, r5, #24
 1126 080e FFF7FEFF 		bl	uxListRemove
 1127              	.L165:
 1128 0812 0E4C     		ldr	r4, .L170
 1129 0814 3146     		mov	r1, r6
 1130 0816 04F17800 		add	r0, r4, #120
 1131 081a FFF7FEFF 		bl	vListInsertEnd
 1132 081e FFF7FEFF 		bl	vPortExitCritical
 1133 0822 A36A     		ldr	r3, [r4, #40]
 1134 0824 9D42     		cmp	r5, r3
 1135 0826 0FD1     		bne	.L162
 1136 0828 D4F88C30 		ldr	r3, [r4, #140]
 1137 082c 1BB1     		cbz	r3, .L167
 1138 082e BDE87040 		pop	{r4, r5, r6, lr}
 1139 0832 FFF7FEBF 		b	vPortYield
 1140              	.L167:
 1141 0836 A26B     		ldr	r2, [r4, #56]
 1142 0838 A16F     		ldr	r1, [r4, #120]
 1143 083a 9142     		cmp	r1, r2
 1144 083c 01D1     		bne	.L168
 1145 083e A362     		str	r3, [r4, #40]
 1146 0840 70BD     		pop	{r4, r5, r6, pc}
 1147              	.L168:
 1148 0842 BDE87040 		pop	{r4, r5, r6, lr}
 1149 0846 FEE7     		b	vTaskSwitchContext
 1150              	.L162:
 1151 0848 70BD     		pop	{r4, r5, r6, pc}
 1152              	.L171:
 1153 084a 00BF     		.align	2
 1154              	.L170:
 1155 084c 00000000 		.word	.LANCHOR0
 1157              		.align	1
 1158              		.global	vTaskPlaceOnEventList
 1159              		.thumb
 1160              		.thumb_func
 1162              	vTaskPlaceOnEventList:
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165 0850 38B5     		push	{r3, r4, r5, lr}
 1166 0852 124C     		ldr	r4, .L175
 1167 0854 0D46     		mov	r5, r1
 1168 0856 A16A     		ldr	r1, [r4, #40]
 1169 0858 1831     		adds	r1, r1, #24
 1170 085a FFF7FEFF 		bl	vListInsert
 1171 085e A06A     		ldr	r0, [r4, #40]
 1172 0860 0430     		adds	r0, r0, #4
 1173 0862 FFF7FEFF 		bl	uxListRemove
 1174 0866 50B9     		cbnz	r0, .L173
 1175 0868 D4F89420 		ldr	r2, [r4, #148]
 1176 086c A36A     		ldr	r3, [r4, #40]
 1177 086e 0121     		movs	r1, #1
 1178 0870 DB6A     		ldr	r3, [r3, #44]
 1179 0872 01FA03F3 		lsl	r3, r1, r3
 1180 0876 22EA0303 		bic	r3, r2, r3
 1181 087a C4F89430 		str	r3, [r4, #148]
 1182              	.L173:
 1183 087e 6B1C     		adds	r3, r5, #1
 1184 0880 0648     		ldr	r0, .L175
 1185 0882 06D1     		bne	.L174
 1186 0884 816A     		ldr	r1, [r0, #40]
 1187 0886 7830     		adds	r0, r0, #120
 1188 0888 0431     		adds	r1, r1, #4
 1189 088a BDE83840 		pop	{r3, r4, r5, lr}
 1190 088e FFF7FEBF 		b	vListInsertEnd
 1191              	.L174:
 1192 0892 C06A     		ldr	r0, [r0, #44]
 1193 0894 2818     		adds	r0, r5, r0
 1194 0896 BDE83840 		pop	{r3, r4, r5, lr}
 1195 089a 11E4     		b	prvAddCurrentTaskToDelayedList
 1196              	.L176:
 1197              		.align	2
 1198              	.L175:
 1199 089c 00000000 		.word	.LANCHOR0
 1201              		.align	1
 1202              		.global	xTaskRemoveFromEventList
 1203              		.thumb
 1204              		.thumb_func
 1206              	xTaskRemoveFromEventList:
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209 08a0 70B5     		push	{r4, r5, r6, lr}
 1210 08a2 C368     		ldr	r3, [r0, #12]
 1211 08a4 144D     		ldr	r5, .L181
 1212 08a6 DC68     		ldr	r4, [r3, #12]
 1213 08a8 04F11806 		add	r6, r4, #24
 1214 08ac 3046     		mov	r0, r6
 1215 08ae FFF7FEFF 		bl	uxListRemove
 1216 08b2 D5F89830 		ldr	r3, [r5, #152]
 1217 08b6 83B9     		cbnz	r3, .L178
 1218 08b8 261D     		adds	r6, r4, #4
 1219 08ba 3046     		mov	r0, r6
 1220 08bc FFF7FEFF 		bl	uxListRemove
 1221 08c0 E36A     		ldr	r3, [r4, #44]
 1222 08c2 0122     		movs	r2, #1
 1223 08c4 02FA03F2 		lsl	r2, r2, r3
 1224 08c8 D5F89410 		ldr	r1, [r5, #148]
 1225 08cc 1420     		movs	r0, #20
 1226 08ce 0A43     		orrs	r2, r2, r1
 1227 08d0 C5F89420 		str	r2, [r5, #148]
 1228 08d4 00FB0350 		mla	r0, r0, r3, r5
 1229 08d8 01E0     		b	.L180
 1230              	.L178:
 1231 08da 05F16400 		add	r0, r5, #100
 1232              	.L180:
 1233 08de 3146     		mov	r1, r6
 1234 08e0 FFF7FEFF 		bl	vListInsertEnd
 1235 08e4 044B     		ldr	r3, .L181
 1236 08e6 E06A     		ldr	r0, [r4, #44]
 1237 08e8 9B6A     		ldr	r3, [r3, #40]
 1238 08ea DB6A     		ldr	r3, [r3, #44]
 1239 08ec 9842     		cmp	r0, r3
 1240 08ee 34BF     		ite	cc
 1241 08f0 0020     		movcc	r0, #0
 1242 08f2 0120     		movcs	r0, #1
 1243 08f4 70BD     		pop	{r4, r5, r6, pc}
 1244              	.L182:
 1245 08f6 00BF     		.align	2
 1246              	.L181:
 1247 08f8 00000000 		.word	.LANCHOR0
 1249              		.align	1
 1250              		.global	vTaskSetTimeOutState
 1251              		.thumb
 1252              		.thumb_func
 1254              	vTaskSetTimeOutState:
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              		@ link register save eliminated.
 1258 08fc 034B     		ldr	r3, .L184
 1259 08fe D3F8A020 		ldr	r2, [r3, #160]
 1260 0902 DB6A     		ldr	r3, [r3, #44]
 1261 0904 0260     		str	r2, [r0, #0]
 1262 0906 4360     		str	r3, [r0, #4]
 1263 0908 7047     		bx	lr
 1264              	.L185:
 1265 090a 00BF     		.align	2
 1266              	.L184:
 1267 090c 00000000 		.word	.LANCHOR0
 1269              		.align	1
 1270              		.global	xTaskCheckForTimeOut
 1271              		.thumb
 1272              		.thumb_func
 1274              	xTaskCheckForTimeOut:
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277 0910 38B5     		push	{r3, r4, r5, lr}
 1278 0912 0D46     		mov	r5, r1
 1279 0914 0446     		mov	r4, r0
 1280 0916 FFF7FEFF 		bl	vPortEnterCritical
 1281 091a 2B68     		ldr	r3, [r5, #0]
 1282 091c 0D49     		ldr	r1, .L192
 1283 091e 581C     		adds	r0, r3, #1
 1284 0920 CA6A     		ldr	r2, [r1, #44]
 1285 0922 10D0     		beq	.L189
 1286 0924 D1F8A000 		ldr	r0, [r1, #160]
 1287 0928 2168     		ldr	r1, [r4, #0]
 1288 092a 8842     		cmp	r0, r1
 1289 092c 6168     		ldr	r1, [r4, #4]
 1290 092e 01D0     		beq	.L188
 1291 0930 8A42     		cmp	r2, r1
 1292 0932 0AD2     		bcs	.L191
 1293              	.L188:
 1294 0934 501A     		subs	r0, r2, r1
 1295 0936 9842     		cmp	r0, r3
 1296 0938 07D2     		bcs	.L191
 1297 093a 8A1A     		subs	r2, r1, r2
 1298 093c D318     		adds	r3, r2, r3
 1299 093e 2B60     		str	r3, [r5, #0]
 1300 0940 2046     		mov	r0, r4
 1301 0942 FFF7FEFF 		bl	vTaskSetTimeOutState
 1302              	.L189:
 1303 0946 0024     		movs	r4, #0
 1304 0948 00E0     		b	.L187
 1305              	.L191:
 1306 094a 0124     		movs	r4, #1
 1307              	.L187:
 1308 094c FFF7FEFF 		bl	vPortExitCritical
 1309 0950 2046     		mov	r0, r4
 1310 0952 38BD     		pop	{r3, r4, r5, pc}
 1311              	.L193:
 1312              		.align	2
 1313              	.L192:
 1314 0954 00000000 		.word	.LANCHOR0
 1316              		.align	1
 1317              		.global	vTaskMissedYield
 1318              		.thumb
 1319              		.thumb_func
 1321              	vTaskMissedYield:
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              		@ link register save eliminated.
 1325 0958 024B     		ldr	r3, .L195
 1326 095a 0122     		movs	r2, #1
 1327 095c C3F8A820 		str	r2, [r3, #168]
 1328 0960 7047     		bx	lr
 1329              	.L196:
 1330 0962 00BF     		.align	2
 1331              	.L195:
 1332 0964 00000000 		.word	.LANCHOR0
 1334              		.align	1
 1335              		.global	uxTaskGetTaskNumber
 1336              		.thumb
 1337              		.thumb_func
 1339              	uxTaskGetTaskNumber:
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              		@ link register save eliminated.
 1343 0968 00B1     		cbz	r0, .L198
 1344 096a 006C     		ldr	r0, [r0, #64]
 1345              	.L198:
 1346 096c 7047     		bx	lr
 1348              		.align	1
 1349              		.global	vTaskSetTaskNumber
 1350              		.thumb
 1351              		.thumb_func
 1353              	vTaskSetTaskNumber:
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357 096e 00B1     		cbz	r0, .L200
 1358 0970 0164     		str	r1, [r0, #64]
 1359              	.L200:
 1360 0972 7047     		bx	lr
 1362              		.align	1
 1363              		.global	uxTaskGetStackHighWaterMark
 1364              		.thumb
 1365              		.thumb_func
 1367              	uxTaskGetStackHighWaterMark:
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 1371 0974 08B9     		cbnz	r0, .L203
 1372 0976 064B     		ldr	r3, .L207
 1373 0978 986A     		ldr	r0, [r3, #40]
 1374              	.L203:
 1375 097a 026B     		ldr	r2, [r0, #48]
 1376 097c 0023     		movs	r3, #0
 1377              	.L204:
 1378 097e 98B2     		uxth	r0, r3
 1379 0980 0133     		adds	r3, r3, #1
 1380 0982 D118     		adds	r1, r2, r3
 1381 0984 11F8011C 		ldrb	r1, [r1, #-1]	@ zero_extendqisi2
 1382 0988 A529     		cmp	r1, #165
 1383 098a F8D0     		beq	.L204
 1384 098c 7047     		bx	lr
 1385              	.L208:
 1386 098e 00BF     		.align	2
 1387              	.L207:
 1388 0990 00000000 		.word	.LANCHOR0
 1390              		.align	1
 1391              		.global	xTaskGetCurrentTaskHandle
 1392              		.thumb
 1393              		.thumb_func
 1395              	xTaskGetCurrentTaskHandle:
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399 0994 014B     		ldr	r3, .L210
 1400 0996 986A     		ldr	r0, [r3, #40]
 1401 0998 7047     		bx	lr
 1402              	.L211:
 1403 099a 00BF     		.align	2
 1404              	.L210:
 1405 099c 00000000 		.word	.LANCHOR0
 1407              		.align	1
 1408              		.global	xTaskGetSchedulerState
 1409              		.thumb
 1410              		.thumb_func
 1412              	xTaskGetSchedulerState:
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415              		@ link register save eliminated.
 1416 09a0 054B     		ldr	r3, .L216
 1417 09a2 D3F88C00 		ldr	r0, [r3, #140]
 1418 09a6 28B1     		cbz	r0, .L213
 1419 09a8 D3F89800 		ldr	r0, [r3, #152]
 1420 09ac 0028     		cmp	r0, #0
 1421 09ae 14BF     		ite	ne
 1422 09b0 0220     		movne	r0, #2
 1423 09b2 0120     		moveq	r0, #1
 1424              	.L213:
 1425 09b4 7047     		bx	lr
 1426              	.L217:
 1427 09b6 00BF     		.align	2
 1428              	.L216:
 1429 09b8 00000000 		.word	.LANCHOR0
 1431              		.align	1
 1432              		.global	vTaskPriorityInherit
 1433              		.thumb
 1434              		.thumb_func
 1436              	vTaskPriorityInherit:
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439 09bc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1440 09be 0446     		mov	r4, r0
 1441 09c0 0028     		cmp	r0, #0
 1442 09c2 39D0     		beq	.L218
 1443 09c4 1D4D     		ldr	r5, .L222
 1444 09c6 C36A     		ldr	r3, [r0, #44]
 1445 09c8 AA6A     		ldr	r2, [r5, #40]
 1446 09ca D26A     		ldr	r2, [r2, #44]
 1447 09cc 9342     		cmp	r3, r2
 1448 09ce 33D2     		bcs	.L218
 1449 09d0 AA6A     		ldr	r2, [r5, #40]
 1450 09d2 1427     		movs	r7, #20
 1451 09d4 D26A     		ldr	r2, [r2, #44]
 1452 09d6 07FB0353 		mla	r3, r7, r3, r5
 1453 09da C2F10202 		rsb	r2, r2, #2
 1454 09de 8261     		str	r2, [r0, #24]
 1455 09e0 4269     		ldr	r2, [r0, #20]
 1456 09e2 9A42     		cmp	r2, r3
 1457 09e4 25D1     		bne	.L220
 1458 09e6 061D     		adds	r6, r0, #4
 1459 09e8 3046     		mov	r0, r6
 1460 09ea FFF7FEFF 		bl	uxListRemove
 1461 09ee 60B9     		cbnz	r0, .L221
 1462 09f0 E36A     		ldr	r3, [r4, #44]
 1463 09f2 5F43     		muls	r7, r3, r7
 1464 09f4 EA59     		ldr	r2, [r5, r7]
 1465 09f6 42B9     		cbnz	r2, .L221
 1466 09f8 0121     		movs	r1, #1
 1467 09fa 01FA03F3 		lsl	r3, r1, r3
 1468 09fe D5F89420 		ldr	r2, [r5, #148]
 1469 0a02 22EA0303 		bic	r3, r2, r3
 1470 0a06 C5F89430 		str	r3, [r5, #148]
 1471              	.L221:
 1472 0a0a 0C4B     		ldr	r3, .L222
 1473 0a0c 0121     		movs	r1, #1
 1474 0a0e 9A6A     		ldr	r2, [r3, #40]
 1475 0a10 D3F89400 		ldr	r0, [r3, #148]
 1476 0a14 D26A     		ldr	r2, [r2, #44]
 1477 0a16 01FA02F1 		lsl	r1, r1, r2
 1478 0a1a 0143     		orrs	r1, r1, r0
 1479 0a1c 1420     		movs	r0, #20
 1480 0a1e 00FB0230 		mla	r0, r0, r2, r3
 1481 0a22 C3F89410 		str	r1, [r3, #148]
 1482 0a26 3146     		mov	r1, r6
 1483 0a28 E262     		str	r2, [r4, #44]
 1484 0a2a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1485 0a2e FFF7FEBF 		b	vListInsertEnd
 1486              	.L220:
 1487 0a32 AB6A     		ldr	r3, [r5, #40]
 1488 0a34 DB6A     		ldr	r3, [r3, #44]
 1489 0a36 C362     		str	r3, [r0, #44]
 1490              	.L218:
 1491 0a38 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1492              	.L223:
 1493 0a3a 00BF     		.align	2
 1494              	.L222:
 1495 0a3c 00000000 		.word	.LANCHOR0
 1497              		.align	1
 1498              		.global	vTaskPriorityDisinherit
 1499              		.thumb
 1500              		.thumb_func
 1502              	vTaskPriorityDisinherit:
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505 0a40 38B5     		push	{r3, r4, r5, lr}
 1506 0a42 0446     		mov	r4, r0
 1507 0a44 0028     		cmp	r0, #0
 1508 0a46 2DD0     		beq	.L224
 1509 0a48 C26A     		ldr	r2, [r0, #44]
 1510 0a4a 436C     		ldr	r3, [r0, #68]
 1511 0a4c 9A42     		cmp	r2, r3
 1512 0a4e 29D0     		beq	.L224
 1513 0a50 051D     		adds	r5, r0, #4
 1514 0a52 2846     		mov	r0, r5
 1515 0a54 FFF7FEFF 		bl	uxListRemove
 1516 0a58 70B9     		cbnz	r0, .L226
 1517 0a5a E26A     		ldr	r2, [r4, #44]
 1518 0a5c 1421     		movs	r1, #20
 1519 0a5e 5143     		muls	r1, r2, r1
 1520 0a60 114B     		ldr	r3, .L227
 1521 0a62 5958     		ldr	r1, [r3, r1]
 1522 0a64 41B9     		cbnz	r1, .L226
 1523 0a66 0120     		movs	r0, #1
 1524 0a68 00FA02F2 		lsl	r2, r0, r2
 1525 0a6c D3F89410 		ldr	r1, [r3, #148]
 1526 0a70 21EA0202 		bic	r2, r1, r2
 1527 0a74 C3F89420 		str	r2, [r3, #148]
 1528              	.L226:
 1529 0a78 636C     		ldr	r3, [r4, #68]
 1530 0a7a 0121     		movs	r1, #1
 1531 0a7c 01FA03F1 		lsl	r1, r1, r3
 1532 0a80 C3F10202 		rsb	r2, r3, #2
 1533 0a84 A261     		str	r2, [r4, #24]
 1534 0a86 084A     		ldr	r2, .L227
 1535 0a88 E362     		str	r3, [r4, #44]
 1536 0a8a D2F89400 		ldr	r0, [r2, #148]
 1537 0a8e 0143     		orrs	r1, r1, r0
 1538 0a90 1420     		movs	r0, #20
 1539 0a92 00FB0320 		mla	r0, r0, r3, r2
 1540 0a96 C2F89410 		str	r1, [r2, #148]
 1541 0a9a 2946     		mov	r1, r5
 1542 0a9c BDE83840 		pop	{r3, r4, r5, lr}
 1543 0aa0 FFF7FEBF 		b	vListInsertEnd
 1544              	.L224:
 1545 0aa4 38BD     		pop	{r3, r4, r5, pc}
 1546              	.L228:
 1547 0aa6 00BF     		.align	2
 1548              	.L227:
 1549 0aa8 00000000 		.word	.LANCHOR0
 1551              		.align	1
 1552              		.global	uxTaskGetCpuUsage
 1553              		.thumb
 1554              		.thumb_func
 1556              	uxTaskGetCpuUsage:
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559 0aac 10B5     		push	{r4, lr}
 1560 0aae 10B9     		cbnz	r0, .L231
 1561 0ab0 054B     		ldr	r3, .L232
 1562 0ab2 9C6A     		ldr	r4, [r3, #40]
 1563 0ab4 00E0     		b	.L230
 1564              	.L231:
 1565 0ab6 0446     		mov	r4, r0
 1566              	.L230:
 1567 0ab8 FFF7FEFF 		bl	uxGetTimerForRunTimeStats
 1568 0abc A36C     		ldr	r3, [r4, #72]
 1569 0abe 6422     		movs	r2, #100
 1570 0ac0 5343     		muls	r3, r2, r3
 1571 0ac2 B3FBF0F0 		udiv	r0, r3, r0
 1572 0ac6 10BD     		pop	{r4, pc}
 1573              	.L233:
 1574              		.align	2
 1575              	.L232:
 1576 0ac8 00000000 		.word	.LANCHOR0
 1578              		.align	1
 1579              		.global	vTaskResetRunTimeStats
 1580              		.thumb
 1581              		.thumb_func
 1583              	vTaskResetRunTimeStats:
 1584              		@ args = 0, pretend = 0, frame = 0
 1585              		@ frame_needed = 0, uses_anonymous_args = 0
 1586 0acc 10B5     		push	{r4, lr}
 1587 0ace 144C     		ldr	r4, .L240
 1588 0ad0 FFF7FEFF 		bl	vTaskSuspendAll
 1589 0ad4 6369     		ldr	r3, [r4, #20]
 1590 0ad6 1BB1     		cbz	r3, .L235
 1591 0ad8 04F11400 		add	r0, r4, #20
 1592 0adc FFF790FA 		bl	prvResetRunTimeStatsInList
 1593              	.L235:
 1594 0ae0 2368     		ldr	r3, [r4, #0]
 1595 0ae2 13B1     		cbz	r3, .L236
 1596 0ae4 0E48     		ldr	r0, .L240
 1597 0ae6 FFF78BFA 		bl	prvResetRunTimeStatsInList
 1598              	.L236:
 1599 0aea 636B     		ldr	r3, [r4, #52]
 1600 0aec 1B68     		ldr	r3, [r3, #0]
 1601 0aee 1BB1     		cbz	r3, .L237
 1602 0af0 0B4B     		ldr	r3, .L240
 1603 0af2 586B     		ldr	r0, [r3, #52]
 1604 0af4 FFF784FA 		bl	prvResetRunTimeStatsInList
 1605              	.L237:
 1606 0af8 094C     		ldr	r4, .L240
 1607 0afa 236B     		ldr	r3, [r4, #48]
 1608 0afc 1B68     		ldr	r3, [r3, #0]
 1609 0afe 13B1     		cbz	r3, .L238
 1610 0b00 206B     		ldr	r0, [r4, #48]
 1611 0b02 FFF77DFA 		bl	prvResetRunTimeStatsInList
 1612              	.L238:
 1613 0b06 A36F     		ldr	r3, [r4, #120]
 1614 0b08 13B1     		cbz	r3, .L239
 1615 0b0a 0648     		ldr	r0, .L240+4
 1616 0b0c FFF778FA 		bl	prvResetRunTimeStatsInList
 1617              	.L239:
 1618 0b10 0023     		movs	r3, #0
 1619 0b12 C4F8B030 		str	r3, [r4, #176]
 1620 0b16 FFF7FEFF 		bl	resetRunTimeCounter
 1621 0b1a BDE81040 		pop	{r4, lr}
 1622 0b1e FEE7     		b	xTaskResumeAll
 1623              	.L241:
 1624              		.align	2
 1625              	.L240:
 1626 0b20 00000000 		.word	.LANCHOR0
 1627 0b24 78000000 		.word	.LANCHOR0+120
 1629              		.global	pxCurrentTCB
 1630              		.section	.rodata
 1631              		.set	.LANCHOR2,. + 0
 1634              	ucExpectedStackBytes.5074:
 1635 0000 A5       		.byte	-91
 1636 0001 A5       		.byte	-91
 1637 0002 A5       		.byte	-91
 1638 0003 A5       		.byte	-91
 1639 0004 A5       		.byte	-91
 1640 0005 A5       		.byte	-91
 1641 0006 A5       		.byte	-91
 1642 0007 A5       		.byte	-91
 1643 0008 A5       		.byte	-91
 1644 0009 A5       		.byte	-91
 1645 000a A5       		.byte	-91
 1646 000b A5       		.byte	-91
 1647 000c A5       		.byte	-91
 1648 000d A5       		.byte	-91
 1649 000e A5       		.byte	-91
 1650 000f A5       		.byte	-91
 1651 0010 A5       		.byte	-91
 1652 0011 A5       		.byte	-91
 1653 0012 A5       		.byte	-91
 1654 0013 A5       		.byte	-91
 1655              		.section	.rodata.str1.1,"aMS",%progbits,1
 1656              	.LC0:
 1657 0000 49444C45 		.ascii	"IDLE\000"
 1657      00
 1658              		.data
 1659              		.align	2
 1660              		.set	.LANCHOR1,. + 0
 1663              	xNextTaskUnblockTime:
 1664 0000 FFFFFFFF 		.word	-1
 1665              		.bss
 1666              		.align	2
 1667              		.set	.LANCHOR0,. + 0
 1670              	pxReadyTasksLists:
 1671 0000 00000000 		.space	40
 1671      00000000 
 1671      00000000 
 1671      00000000 
 1671      00000000 
 1674              	pxCurrentTCB:
 1675 0028 00000000 		.space	4
 1678              	xTickCount:
 1679 002c 00000000 		.space	4
 1682              	pxOverflowDelayedTaskList:
 1683 0030 00000000 		.space	4
 1686              	pxDelayedTaskList:
 1687 0034 00000000 		.space	4
 1690              	uxCurrentNumberOfTasks:
 1691 0038 00000000 		.space	4
 1694              	xDelayedTaskList1:
 1695 003c 00000000 		.space	20
 1695      00000000 
 1695      00000000 
 1695      00000000 
 1695      00000000 
 1698              	xDelayedTaskList2:
 1699 0050 00000000 		.space	20
 1699      00000000 
 1699      00000000 
 1699      00000000 
 1699      00000000 
 1702              	xPendingReadyList:
 1703 0064 00000000 		.space	20
 1703      00000000 
 1703      00000000 
 1703      00000000 
 1703      00000000 
 1706              	xSuspendedTaskList:
 1707 0078 00000000 		.space	20
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1710              	xSchedulerRunning:
 1711 008c 00000000 		.space	4
 1714              	uxTaskNumber:
 1715 0090 00000000 		.space	4
 1718              	uxTopReadyPriority:
 1719 0094 00000000 		.space	4
 1722              	uxSchedulerSuspended:
 1723 0098 00000000 		.space	4
 1726              	xIdleTaskHandle:
 1727 009c 00000000 		.space	4
 1730              	xNumOfOverflows:
 1731 00a0 00000000 		.space	4
 1734              	uxPendedTicks:
 1735 00a4 00000000 		.space	4
 1738              	xYieldPending:
 1739 00a8 00000000 		.space	4
 1742              	ulTotalRunTime:
 1743 00ac 00000000 		.space	4
 1746              	ulTaskSwitchedInTime:
 1747 00b0 00000000 		.space	4
 1748              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.6.2 20120613 (release) [ARM/embedded-4_6-br
DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
     /tmp/ccNAiRdB.s:16     .text:00000000 $t
     /tmp/ccNAiRdB.s:20     .text:00000000 prvResetRunTimeStatsInList
     /tmp/ccNAiRdB.s:54     .text:00000034 prvIdleTask
     /tmp/ccNAiRdB.s:70     .text:00000048 $d
     /tmp/ccNAiRdB.s:72     .text:0000004c $t
     /tmp/ccNAiRdB.s:76     .text:0000004c prvListTaskWithinSingleList.part.0
     /tmp/ccNAiRdB.s:134    .text:000000c0 prvAddCurrentTaskToDelayedList
     /tmp/ccNAiRdB.s:164    .text:000000f4 $d
     /tmp/ccNAiRdB.s:167    .text:000000fc $t
     /tmp/ccNAiRdB.s:172    .text:000000fc xTaskGenericCreate
     /tmp/ccNAiRdB.s:317    .text:00000264 $d
     /tmp/ccNAiRdB.s:319    .text:00000268 $t
     /tmp/ccNAiRdB.s:324    .text:00000268 xTaskIsTaskSuspended
     /tmp/ccNAiRdB.s:349    .text:0000028c $d
     /tmp/ccNAiRdB.s:351    .text:00000290 $t
     /tmp/ccNAiRdB.s:356    .text:00000290 vTaskResume
     /tmp/ccNAiRdB.s:399    .text:000002ec $d
     /tmp/ccNAiRdB.s:401    .text:000002f0 $t
     /tmp/ccNAiRdB.s:406    .text:000002f0 xTaskResumeFromISR
     /tmp/ccNAiRdB.s:455    .text:00000364 $d
     /tmp/ccNAiRdB.s:457    .text:00000368 $t
     /tmp/ccNAiRdB.s:462    .text:00000368 vTaskStartScheduler
     /tmp/ccNAiRdB.s:494    .text:000003a8 $d
     /tmp/ccNAiRdB.s:498    .text:000003b4 $t
     /tmp/ccNAiRdB.s:503    .text:000003b4 vTaskEndScheduler
     /tmp/ccNAiRdB.s:516    .text:000003cc $d
     /tmp/ccNAiRdB.s:518    .text:000003d0 $t
     /tmp/ccNAiRdB.s:523    .text:000003d0 vTaskSuspendAll
     /tmp/ccNAiRdB.s:535    .text:000003e0 $d
     /tmp/ccNAiRdB.s:537    .text:000003e4 $t
     /tmp/ccNAiRdB.s:542    .text:000003e4 xTaskGetTickCount
     /tmp/ccNAiRdB.s:555    .text:000003f8 $d
     /tmp/ccNAiRdB.s:557    .text:000003fc $t
     /tmp/ccNAiRdB.s:562    .text:000003fc xTaskGetTickCountFromISR
     /tmp/ccNAiRdB.s:575    .text:00000410 $d
     /tmp/ccNAiRdB.s:577    .text:00000414 $t
     /tmp/ccNAiRdB.s:582    .text:00000414 uxTaskGetNumberOfTasks
     /tmp/ccNAiRdB.s:592    .text:0000041c $d
     /tmp/ccNAiRdB.s:594    .text:00000420 $t
     /tmp/ccNAiRdB.s:599    .text:00000420 xTaskGetIdleTaskHandle
     /tmp/ccNAiRdB.s:609    .text:00000428 $d
     /tmp/ccNAiRdB.s:611    .text:0000042c $t
     /tmp/ccNAiRdB.s:616    .text:0000042c xTaskIncrementTick
     /tmp/ccNAiRdB.s:733    .text:00000520 $d
     /tmp/ccNAiRdB.s:736    .text:00000528 $t
     /tmp/ccNAiRdB.s:741    .text:00000528 xTaskResumeAll
     /tmp/ccNAiRdB.s:828    .text:000005e8 $d
     /tmp/ccNAiRdB.s:830    .text:000005ec $t
     /tmp/ccNAiRdB.s:835    .text:000005ec uxTaskGetSystemState
     /tmp/ccNAiRdB.s:903    .text:00000674 $d
     /tmp/ccNAiRdB.s:905    .text:00000678 $t
     /tmp/ccNAiRdB.s:910    .text:00000678 vTaskDelay
     /tmp/ccNAiRdB.s:944    .text:000006c0 $d
     /tmp/ccNAiRdB.s:946    .text:000006c4 $t
     /tmp/ccNAiRdB.s:951    .text:000006c4 vTaskDelayUntil
     /tmp/ccNAiRdB.s:1009   .text:00000730 $d
     /tmp/ccNAiRdB.s:1011   .text:00000734 $t
     /tmp/ccNAiRdB.s:1016   .text:00000734 vTaskSwitchContext
     /tmp/ccNAiRdB.s:1089   .text:000007c8 $d
     /tmp/ccNAiRdB.s:1092   .text:000007d0 $t
     /tmp/ccNAiRdB.s:1097   .text:000007d0 vTaskSuspend
     /tmp/ccNAiRdB.s:1155   .text:0000084c $d
     /tmp/ccNAiRdB.s:1157   .text:00000850 $t
     /tmp/ccNAiRdB.s:1162   .text:00000850 vTaskPlaceOnEventList
     /tmp/ccNAiRdB.s:1199   .text:0000089c $d
     /tmp/ccNAiRdB.s:1201   .text:000008a0 $t
     /tmp/ccNAiRdB.s:1206   .text:000008a0 xTaskRemoveFromEventList
     /tmp/ccNAiRdB.s:1247   .text:000008f8 $d
     /tmp/ccNAiRdB.s:1249   .text:000008fc $t
     /tmp/ccNAiRdB.s:1254   .text:000008fc vTaskSetTimeOutState
     /tmp/ccNAiRdB.s:1267   .text:0000090c $d
     /tmp/ccNAiRdB.s:1269   .text:00000910 $t
     /tmp/ccNAiRdB.s:1274   .text:00000910 xTaskCheckForTimeOut
     /tmp/ccNAiRdB.s:1314   .text:00000954 $d
     /tmp/ccNAiRdB.s:1316   .text:00000958 $t
     /tmp/ccNAiRdB.s:1321   .text:00000958 vTaskMissedYield
     /tmp/ccNAiRdB.s:1332   .text:00000964 $d
     /tmp/ccNAiRdB.s:1334   .text:00000968 $t
     /tmp/ccNAiRdB.s:1339   .text:00000968 uxTaskGetTaskNumber
     /tmp/ccNAiRdB.s:1353   .text:0000096e vTaskSetTaskNumber
     /tmp/ccNAiRdB.s:1367   .text:00000974 uxTaskGetStackHighWaterMark
     /tmp/ccNAiRdB.s:1388   .text:00000990 $d
     /tmp/ccNAiRdB.s:1390   .text:00000994 $t
     /tmp/ccNAiRdB.s:1395   .text:00000994 xTaskGetCurrentTaskHandle
     /tmp/ccNAiRdB.s:1405   .text:0000099c $d
     /tmp/ccNAiRdB.s:1407   .text:000009a0 $t
     /tmp/ccNAiRdB.s:1412   .text:000009a0 xTaskGetSchedulerState
     /tmp/ccNAiRdB.s:1429   .text:000009b8 $d
     /tmp/ccNAiRdB.s:1431   .text:000009bc $t
     /tmp/ccNAiRdB.s:1436   .text:000009bc vTaskPriorityInherit
     /tmp/ccNAiRdB.s:1495   .text:00000a3c $d
     /tmp/ccNAiRdB.s:1497   .text:00000a40 $t
     /tmp/ccNAiRdB.s:1502   .text:00000a40 vTaskPriorityDisinherit
     /tmp/ccNAiRdB.s:1549   .text:00000aa8 $d
     /tmp/ccNAiRdB.s:1551   .text:00000aac $t
     /tmp/ccNAiRdB.s:1556   .text:00000aac uxTaskGetCpuUsage
     /tmp/ccNAiRdB.s:1576   .text:00000ac8 $d
     /tmp/ccNAiRdB.s:1578   .text:00000acc $t
     /tmp/ccNAiRdB.s:1583   .text:00000acc vTaskResetRunTimeStats
     /tmp/ccNAiRdB.s:1626   .text:00000b20 $d
     /tmp/ccNAiRdB.s:1674   .bss:00000028 pxCurrentTCB
     /tmp/ccNAiRdB.s:1634   .rodata:00000000 ucExpectedStackBytes.5074
     /tmp/ccNAiRdB.s:1659   .data:00000000 $d
     /tmp/ccNAiRdB.s:1663   .data:00000000 xNextTaskUnblockTime
     /tmp/ccNAiRdB.s:1666   .bss:00000000 $d
     /tmp/ccNAiRdB.s:1670   .bss:00000000 pxReadyTasksLists
     /tmp/ccNAiRdB.s:1678   .bss:0000002c xTickCount
     /tmp/ccNAiRdB.s:1682   .bss:00000030 pxOverflowDelayedTaskList
     /tmp/ccNAiRdB.s:1686   .bss:00000034 pxDelayedTaskList
     /tmp/ccNAiRdB.s:1690   .bss:00000038 uxCurrentNumberOfTasks
     /tmp/ccNAiRdB.s:1694   .bss:0000003c xDelayedTaskList1
     /tmp/ccNAiRdB.s:1698   .bss:00000050 xDelayedTaskList2
     /tmp/ccNAiRdB.s:1702   .bss:00000064 xPendingReadyList
     /tmp/ccNAiRdB.s:1706   .bss:00000078 xSuspendedTaskList
     /tmp/ccNAiRdB.s:1710   .bss:0000008c xSchedulerRunning
     /tmp/ccNAiRdB.s:1714   .bss:00000090 uxTaskNumber
     /tmp/ccNAiRdB.s:1718   .bss:00000094 uxTopReadyPriority
     /tmp/ccNAiRdB.s:1722   .bss:00000098 uxSchedulerSuspended
     /tmp/ccNAiRdB.s:1726   .bss:0000009c xIdleTaskHandle
     /tmp/ccNAiRdB.s:1730   .bss:000000a0 xNumOfOverflows
     /tmp/ccNAiRdB.s:1734   .bss:000000a4 uxPendedTicks
     /tmp/ccNAiRdB.s:1738   .bss:000000a8 xYieldPending
     /tmp/ccNAiRdB.s:1742   .bss:000000ac ulTotalRunTime
     /tmp/ccNAiRdB.s:1746   .bss:000000b0 ulTaskSwitchedInTime

UNDEFINED SYMBOLS
vPortYield
vApplicationIdleHook
vListInsert
pvPortMalloc
vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vPortEnterCritical
vListInitialise
vListInsertEnd
vPortExitCritical
uxListRemove
ulPortSetInterruptMask
vPortClearInterruptMask
vConfigureTimerForRunTimeStats
xPortStartScheduler
vPortEndScheduler
vApplicationTickHook
uxGetTimerForRunTimeStats
vApplicationStackOverflowHook
memcmp
resetRunTimeCounter
